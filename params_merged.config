{

"distance"     : 135.76,     # Distance to the galaxy, in Mpc. Since this script was meant to be run on multiple observations of a
                # single galaxy, this needs to be user input in params_merged.config, as pulling it from the copied
                # params.config would make life more difficult.

"filter_check"     : "0.5-7",    # Same as the filter_check variable the user should be familiar with from xray_flux.py. Since users might
                # have run xray_flux.py multiple times in different bands, there could be more than one repro directory
                # in each obsid folder. This tells the code which one to focus on, as well as being used for the fluximage
                # part of merge_obs.

"band_check"     : "0.5-2",    # Similar to above - this tells the code which repro directory to look for, and also gets plugged into
                # srcflux later in the code. Same as the band_check variable in xray_flux.py.

"aperture_correct"  : 0.90,   # The fractional aperture correction to apply. A value of 0.9 is 90%, etc. Normally, in non-merging analysis,
                            # this would be automatically calculated for each source by srcflux, however here we have to define it 
                            # ourselves. A good way to determine this is to look at the the values for PSFFRAC in the individual source
                            # analysis results from xray_flux (in the src_all.txt file) and use that value here.

"max_sep"     : 0.1,         # In arcseconds, this is the maximum separation tolerated between source centroids in different obsids.
                # Different observations of the same object might have slightly different astrometry, so in this code
                # we run wavdetect on the merged event file, then use this position to search for source centroids (in a
                # small radius around the position) in all the different obsid event files. This variable is the maximum
                # separation we can detect between the positions of those source centroids in different obsid event files
                # before terminating the script. The rule of thumb for this is that we need the astrometric differences
                # to be much less than a chandra pixel (0.492 arcsec), so the default value for is is 0.1 as ~1/5th of
                # a pixel. It probably shouldn't be changed to be much higher. If the code does detect too big an offset
                # and stops, the user will have to do astrometry realignment on the offending obsids.

"max_std"     : 0.02,        # Slightly complicated to explain, but essentially this is a measure of how different the calculated
                # source radii are allowed to be before we start caring about it. In xray_flux.py, we find source radii
                # by using psfsize_srcs to create a region that captures a certain fraction of the psf energy (given by
                # the variable analysis_psfecf) at a certain energy (given by analysis_energy). Since psfsize_srcs 
                # cannot be run on the merged event file, we instead run it on all the different event files from the
                # different obsids and average the calculated radii together to arrive at a final source region radius.
                # During this finding of the average, we also calculate the standard deviation (std) of all of the
                # calculated radii. This can likely be set higher than the current value of 0.02, but less variation
                # is naturally better. Note that we also use this as the limit for the std between the different galaxy 
                # regions.

"fine_correct"    : "make",    # Controls what the code does with fine astrometric corrections. Options are 'make' and 'use'. If 
                    # set to 'make': assuming fine corrections are detected as needed (e.g. the source centroids differ by a non-
                    # negligible amount) then the code will carry out fine astrometric corrections (assuming reference_obsid  has 
                    # been specified) save the corrected files, then quit. If set to 'use': when starting, instead of searching out 
                    # and using the evt2 files from the obsid directories, the code will search out and use the finely corrected
                    # images (which were saved when running with 'make'). 

"reference_obsid"     : 25274,     # The obsid to use as 'correct' when making fine astrometric corrections between observations - i.e.
                    # the one we match the other obsids to. Required to be set to a valid value to use fine_correct='make'. Can be 
                    # specified as either an int or a string, e.g. '12345' or 12345.


"obsids_to_correct"   : [],       # A list of obsids to calculate and apply fine corrections to (when fine_correct='make'). If set
                    # to a list of obsids, e.g. obsids_to_correct=[12345,23456], fine corrections will only be calculated for the 
                    # listed obsids. If set to an empty list, e.g. obsids_to_correct=[], fine corrections will be calculated for
                    # all obsids (save for reference_obsid). When fine_correct='use', will be used to determine which files to use
                    # for merging, wavdetect, etc. Since there will be a mix of corrected and uncorrected obsids (for instance,
                    # the reference_obsid will remain uncorrected), this list is used to figure out whether to use the corrected
                    # or uncorrected event files for a specific obsid. For example, if obsids_to_correct=[12345,23456], then the code
                    # would only use corrected event files for obsids 12345,23456, and the original uncorrected event files for all
                    # other obsids. Basically - if you want to correct everything, leave it blank. If you want to correct not all
                    # files, set the list to the obsids you want to correct. In general, leave the list the same for both 
                    # fine_correct='make' and fine_correct='use'.

"force_continue"      : "False",     # Forces continuation of analysis, regardless of current astrometry. Should be used sparingly, as 
                    # setting to "True" can lead to incorrect flux results if the astrometry is bad.
}
